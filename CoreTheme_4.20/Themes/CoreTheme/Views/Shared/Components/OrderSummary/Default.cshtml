@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Orders
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject OrderSettings orderSettings

 @if (Model.Warnings.Count > 0)
        {
           <div class="modal fade goods" tabindex="-1" role="dialog">
               <div class="modal-dialog" role="document">
                   <div class="modal-content">
                       <div class="modal-header">
                           <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                   aria-hidden="true">&times;</span></button>
                           <h4 class="modal-title">提示</h4>
                       </div>
                       <div class="modal-body">
                           <ul>
                               @foreach (var warning in Model.Warnings)
                               {
                               <li>@warning</li>
                               }
                           </ul>
                       </div>
                       <div class="modal-footer">
                           <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>

                       </div>
                   </div><!-- /.modal-content -->
               </div><!-- /.modal-dialog -->
           </div><!-- /.modal -->
           <script asp-location="Footer">
               $('.goods').modal('show')
           </script>  
        }
    <!--form begin-->
    <form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form" class="or-main">
        <div class="or-left">
            <div class="or-item">
                <div class="or-box">
                        @foreach (var item in Model.Items)
                        {
                        <div class="or-t-box mt20">
                       
                         <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>            
                        
                       
                        <div class="m-bl">
                            <div class="r-title">
                                <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name link-red">@item.ProductName</a>
                            </div>
                            <div>
                                G25C-AS27-650B DISC brake wheelset is born for gravel bikes in mountains with a 27mm
                                internal width. You could simply mount MTB tires and ride into the mountains to explore
                                the nature and fun.
                            </div>
                        </div>
                        <div class="or-count">
                            <div>
                                    @if (Model.IsEditable)
                                    {
                                        if (item.AllowedQuantities.Count > 0)
                                        {
                                            <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
                                                @foreach (var qty in item.AllowedQuantities)
                                                {
                                                    <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                }
                                            </select>
                                        }
                                        else
                                        {
                                            <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input"/>
                                        }
                                    }
                                    else
                                    {
                                        <span class="product-quantity">x @item.Quantity</span>
                                    }
                            </div>
                            <div>@item.SubTotal</div>
                        </div>
                        <div class="or-icon or-count">
                            <div><span class="icon font_family">&#xe609;</span></div>
                            <div><span class="icon font_family  active">&#xe60c;</span></div>
                        </div>
                    </div>
                        }
                   

                </div>
                <div class="or-invove">
                    <div>
                        <div class="font-text font-bold">DELIVERY</div>
                        <div class="font-text-sm mt10">8 days to two weeks</div>
                    </div>

                </div>
            </div>



        </div>
        <!--        account info-->
        <div class="or-right">
            <div class="cart-total">
                <div class="cart-title">IN TOTAL</div>
               @await Component.InvokeAsync("OrderTotals", new { isEditable = Model.IsEditable })
            </div>

            <div class="or-account mt20">
               @if (Model.IsEditable)
                {
                    @await Html.PartialAsync("_CheckoutAttributes", Model)
                }
              @await Html.PartialAsync("_DiscountBox", Model.DiscountBox)

              @if(Model.GiftCardBox.Display){
                  <div style="display:none">
                    <input type="text" name="giftcardcouponcode" id="giftcardcouponcode"/>
                    </div>
              }
              </div>

            <div class="payment_options mt20">
                <div class="payment_options_de">
                    <div class="font-text text-red font-bold">PAYMENT OPTIONS</div>
                    <div class="pay-img-box mt10">
                        <img src="./images/payment-paypal.jpg" alt="">
                        <img src="./images/payment-visa.jpg" alt="">
                        <img src="./images/payment-master.jpg" alt="">
                        <img src="./images/payment-anerican.jpg" alt="">
                    </div>
                </div>
                <div class="pay-btn">
                            @if (string.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
                            {
                              <div style="display:none">  <input id="termsofservice" type="checkbox" name="termsofservice" selected /></div>
                                <!-- <script asp-location="Footer">
                                    $(document).ready(function () {
                                        $('#checkout').on('click', function () {
                                            //terms of service
                                            var termOfServiceOk = true;
                                            if ($('#termsofservice').length > 0) {
                                                //terms of service element exists
                                                if (!$('#termsofservice').is(':checked')) {
                                                    $("#terms-of-service-warning-box").dialog();
                                                    termOfServiceOk = false;
                                                } else {
                                                    termOfServiceOk = true;
                                                }
                                            }
                                            return termOfServiceOk;
                                        });
                                    });
                                </script> -->
                            
                                if (orderSettings.CheckoutDisabled)
                                {
                                    <div class="checkout-disabled">
                                        @T("Checkout.Disabled")
                                    </div>
                                }
                                else
                                {
                                    <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                        @T("Checkout.Button")
                                    </button>
                                }
                            }
                </div>

                <div class="addon-buttons">
                            @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                            @foreach (var pm in Model.ButtonPaymentMethodViewComponentNames)
                            {
                                @await Component.InvokeAsync(pm)
                            }
                </div>
            </div>

            @await Component.InvokeAsync("EstimateShipping")
            
        </div>
        <!--form end-->
        </form>